@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="body-content">
    <form method="post" class="form-horizontal">
        <p>Place URL/Text Here: <textarea name="Input">@ViewData["Input"]</textarea><button type="submit" class="btn btn-primary">Submit</button></p>
        <p>
            <strong>Settings:</strong>
            <ul>
                <li>URL Count: @Html.CheckBoxFor(x => x.EnableURL)</li>
                <li>Meta Keywords: @Html.CheckBoxFor(x => x.EnableKeywords)</li>
                <li>Word Counts: @Html.CheckBoxFor(x => x.EnableWordCounts) </li>
            </ul>
        </p>
    </form>
    @if (ViewData["ErrorMsg"] != null)
    {
        <p><strong>Error: </strong><i>@ViewData["ErrorMsg"]</i></p>
    }
    else
    {
        @if (ViewData["UrlCount"] != null)
        {
            <p><strong>URL Count: </strong>@ViewData["UrlCount"]</p>
        }
        @if (ViewData["Keywords"] != null)
        {
            @if (ViewData["Keywords"] as String == "")
            {
                <p><strong><i>No Keywords found</i></strong></p>

            }
            else
            {
                <p><strong>Keywords: </strong><span id="keywordsContent"> @ViewData["Keywords"]</span></p>
                <p id="keywordCheck">
                    <strong>Show only counts from keywords: </strong><input id="keywordsOnly" type="checkbox" />
                </p>
            }

        }
        @if (ViewData["Result"] != null)
        {
            <table class="sortable" id="countsTable">
                <thead><tr><th>Word</th><th>Count</th></tr></thead>
                <tbody>
                    @foreach (KeyValuePair<string, int> pair in ViewData["Result"] as Dictionary<string, int>)
                    {
                        <tr><td>@pair.Key</td><td>@pair.Value</td></tr>
                    }
                </tbody>
            </table>
        }
    }


</div>
<script>
    var displayKeywordsOnly = document.getElementById('keywordsOnly');
    var countsTable = document.getElementById('countsTable');
    if (!countsTable && displayKeywordsOnly) {
        document.getElementById('keywordCheck').hidden = true;
    }
    if (displayKeywordsOnly) {
        var content = document.getElementById('keywordsContent').textContent.split(',').map(x => x.trim());
        var map = {};
        for (var x of content) {
            map[x] = true;
        }
        console.log(content);
        displayKeywordsOnly.addEventListener('change', function() {
            var rows = countsTable.querySelectorAll('tbody tr');
            if (displayKeywordsOnly.checked) {
                for (var row of rows) {
                    var entry = row.cells[0].textContent;
                    if (!map[entry]) {
                        row.hidden = true;
                    }
                }
            } else {
                for (var row of rows) {
                    row.hidden = false;
                }
            }
        })
    }
</script>